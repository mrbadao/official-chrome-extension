{
  "name": "angular-ui-router",
  "description": "State-based routing for AngularJS",
  "version": "1.0.0-alpha0",
  "homepage": "http://angular-ui.github.com/",
  "contributors": [
    {
      "name": "Nate Abele",
      "email": "nate@radify.io",
      "url": "https://radify.io"
    },
    {
      "name": "Chris Thielen",
      "url": "https://github.com/christopherthielen"
    },
    {
      "name": "Tim Kindberg",
      "url": "https://github.com/timkindberg"
    },
    {
      "name": "Karsten Sperling",
      "url": "https://github.com/ksperling"
    }
  ],
  "maintainers": [
    {
      "name": "AngularUI",
      "url": "https://github.com/angular-ui?tab=members"
    }
  ],
  "repository": {
    "type": "git",
    "url": "https://github.com/angular-ui/ui-router.git"
  },
  "bugs": {
    "url": "https://github.com/angular-ui/ui-router/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/angular-ui/ui-router/blob/master/LICENSE"
    }
  ],
  "dependencies": {
    "angular": "^1.2"
  },
  "devDependencies": {
    "babel-core": "^5.8.14",
    "es6-module-loader": "^0.17.3",
    "faithful-exec": "~0.1.0",
    "grunt": "~0.4.1",
    "grunt-contrib-clean": "~0.5.0",
    "grunt-contrib-connect": "~0.7.1",
    "grunt-contrib-uglify": "~0.4.0",
    "grunt-contrib-watch": "~0.5.3",
    "grunt-conventional-changelog": "~1.1.0",
    "grunt-karma": "~0.11.2",
    "grunt-ngdocs": "~0.1.7",
    "grunt-shell": "^1.1.2",
    "grunt-ts": "^4.2.0",
    "grunt-webpack": "^1.0.10",
    "jasmine-core": "~2.3.4",
    "jsdoc": "git://github.com/jsdoc3/jsdoc.git#v3.2.2",
    "karma": "~0.12.0",
    "karma-chrome-launcher": "~0.1.0",
    "karma-jasmine": "~0.3.6",
    "karma-phantomjs-launcher": "~0.1.0",
    "karma-script-launcher": "~0.1.0",
    "karma-systemjs": "^0.7.2",
    "load-grunt-tasks": "~0.4.0",
    "phantomjs-polyfill": "0.0.1",
    "shelljs": "~0.2.6",
    "systemjs": "^0.18.4",
    "tslint": "=2.5.0",
    "typedoc": "git://github.com/christopherthielen/typedoc.git#v0.3-uirouter",
    "typescript": "=1.7.3",
    "webpack": "1.x",
    "webpack-dev-server": "1.x"
  },
  "main": "release/angular-ui-router",
  "readme": "# feature-1.0 branch\n## Note: this is a pre-alpha preview of UI-Router 1.0\n\nWe've totally redesigned UI-Router under the covers (rewrote about 60% of the codebase!), separating concerns and detangling the spaghetti.  We have taken some new approaches which we hope will provide unprecedented flexibility and control to your UI-Router app.\n\n#### What's changed?\n\n##### Resolves\nThe Resolve API has been rewritten from scratch.  We've introduced the concept of a resolve policy, which can be one of:\n\n* EAGER: All eager resolves for a transition are resolved at the beginning, before any states are entered (this is way UI-Router 0.2.x handles resolves)\n* LAZY: Lazy resolves are resolved when the state they are declared on is entered.\n* JIT: Just-In-Time resolves do not resolve until just before they are injected into some other function. (extremely lazy)\n\nIn 1.0, by default, resolves on your states are \"JIT\"\n\n##### Transition\n\nWe've created a Transition Service to manage transitioning from one state to another.  The transition service provides hooks, which you can register a callback on.  The transition hooks allow you to run code at various stages of a transition, altering it as your app requires.\n\nThe transition lifecycle hooks are currently:\n\n* onBefore\n* onStart/onInvalid\n* onEnter (for individual states)\n* onSuccess\n* onError\n\nWhen registering a hook, you can provide criteria (a state name, a glob, or a function), and you can modify the transition by returning something from the hook (an abort, a redirect, a promise, or some new resolves to add to the transition).\n\nThis enables lots of fun stuff!  Here are a couple of possibilities to get your imagination started:\n```javascript\n$transitionsProvider.onBefore({ to: 'my.state', from: '*' }, function(AsyncService) {\n  return AsyncService.doSomeAsyncThing();\n});\n\n$transitionsProvider.onBefore({ to: 'other.state', from: '*' }, function(AsyncService) {\n  // someAsyncResult added as resolve to transition. It is injectable into other resolves or controllers.\n  return { someAsyncResult: AsyncService.doSomeAsyncThing }; \n});\n\n$transitionsProvider.onStart({ to: function(state) { return state.requiresAuth; } }, function($transition$, $state, AuthService) {\n  return AuthService.ensureAuthenticated().catch(function() { return $state.redirect(\"login\"); });\n});\n\n$transitionsProvider.onStart({ to: function(state) { return state.requiresAuth; } }, function($transition$, $state, AuthService) {\n  return AuthService.ensureAuthenticated().catch(function() { return $state.redirect(\"login\"); });\n});\n\n$transitionsProvider.onStart({ to: function(state) { return state.redirectTo; } }, function($transition$, $state) {\n  return $state.redirect($transition$.to.redirectTo); });\n});\n```\n\n##### State\n\nThe $state service has been heavily refactored, and is now the primary client of the $transition service.  This doesn't offer the end user much *now*, but this separation should eventually enable us to provide things like multiple simultanesouly active states and parallel transitions (think UI-Router Extras \"Sticky States\").\n\nState events will soon be deprecated, but can be easily re-enabled by including the stateEvents.js file.  The state events have all been refactored as callbacks to the transition hooks.\n\n##### Views\n\nThe way UI-Router manages views has been heavily refactored into a view service.  This should allow us to plug in alternate rendering schemes (react?), and should help ease the transition to angular 2.\n\n##### Parameters\n\nThis one has been a long time coming.  Finally, UI-Router supports dynamic parameters in both the URL path and query string.  We've included a decorator which enables reloadOnSearch behavior using dynamic params automatically.\n\n### What's next?\n\nWe're not done making sure every use case that you've been using in UI-Router 0.2.x works just as well in 1.0.  In fact, we just got the new code routing again on June 25 and have no idea what gaps are out there.  We'd like to get some other eyes on this new codebase.  We've moved in most of the unit tests from 0.2.x, but there are certain to be some things missing.  \n\nBuild it.  Try it.  Let us know what's horribly broken.\n\n#### ES6/TypeScript\n\nWe have plans to migrate these new classes to ES6 (for sure), and possibly Typescript.\n\n#### Angular 2\n\nWe'd like to support Angular 2\n\n#### Lazy Loading\n\nWe'd like to have out-of-the-box support for lazy loading states (like UI-Router Extras \"Future States\")\n\n---------------------------------------------\n\n\nThe rest of this README is from an old release.\n\n\n\n# AngularUI Router &nbsp;[![Build Status](https://travis-ci.org/angular-ui/ui-router.svg?branch=master)](https://travis-ci.org/angular-ui/ui-router)\n\n#### The de-facto solution to flexible routing with nested views\n---\n**[Download 0.2.11](http://angular-ui.github.io/ui-router/release/angular-ui-router.js)** (or **[Minified](http://angular-ui.github.io/ui-router/release/angular-ui-router.min.js)**) **|**\n**[Guide](https://github.com/angular-ui/ui-router/wiki) |**\n**[API](http://angular-ui.github.io/ui-router/site) |**\n**[Sample](http://angular-ui.github.com/ui-router/sample/) ([Src](https://github.com/angular-ui/ui-router/tree/gh-pages/sample)) |**\n**[FAQ](https://github.com/angular-ui/ui-router/wiki/Frequently-Asked-Questions) |**\n**[Resources](#resources) |**\n**[Report an Issue](https://github.com/angular-ui/ui-router/blob/master/CONTRIBUTING.md#report-an-issue) |**\n**[Contribute](https://github.com/angular-ui/ui-router/blob/master/CONTRIBUTING.md#contribute) |**\n**[Help!](http://stackoverflow.com/questions/ask?tags=angularjs,angular-ui-router) |**\n**[Discuss](https://groups.google.com/forum/#!categories/angular-ui/router)**\n\n---\n\nAngularUI Router is a routing framework for [AngularJS](http://angularjs.org), which allows you to organize the\nparts of your interface into a [*state machine*](https://en.wikipedia.org/wiki/Finite-state_machine). Unlike the\n[`$route` service](http://docs.angularjs.org/api/ngRoute.$route) in the Angular ngRoute module, which is organized around URL\nroutes, UI-Router is organized around [*states*](https://github.com/angular-ui/ui-router/wiki),\nwhich may optionally have routes, as well as other behavior, attached.\n\nStates are bound to *named*, *nested* and *parallel views*, allowing you to powerfully manage your application's interface.\n\nCheck out the sample app: http://angular-ui.github.io/ui-router/sample/\n\n-\n**Note:** *UI-Router is under active development. As such, while this library is well-tested, the API may change. Consider using it in production applications only if you're comfortable following a changelog and updating your usage accordingly.*\n\n\n## Get Started\n\n**(1)** Get UI-Router in one of 4 ways:\n - clone & [build](CONTRIBUTING.md#developing) this repository\n - [download the release](http://angular-ui.github.io/ui-router/release/angular-ui-router.js) (or [minified](http://angular-ui.github.io/ui-router/release/angular-ui-router.min.js))\n - via **[Bower](http://bower.io/)**: by running `$ bower install angular-ui-router` from your console\n - or via **[npm](https://www.npmjs.org/)**: by running `$ npm install angular-ui-router` from your console\n - or via **[Component](https://github.com/component/component)**: by running `$ component install angular-ui/ui-router` from your console\n\n**(2)** Include `angular-ui-router.js` (or `angular-ui-router.min.js`) in your `index.html`, after including Angular itself (For Component users: ignore this step)\n\n**(3)** Add `'ui.router'` to your main module's list of dependencies (For Component users: replace `'ui.router'` with `require('angular-ui-router')`)\n\nWhen you're done, your setup should look similar to the following:\n\n>\n```html\n<!doctype html>\n<html ng-app=\"myApp\">\n<head>\n    <script src=\"//ajax.googleapis.com/ajax/libs/angularjs/1.1.5/angular.min.js\"></script>\n    <script src=\"js/angular-ui-router.min.js\"></script>\n    <script>\n        var myApp = angular.module('myApp', ['ui.router']);\n        // For Component users, it should look like this:\n        // var myApp = angular.module('myApp', [require('angular-ui-router')]);\n    </script>\n    ...\n</head>\n<body>\n    ...\n</body>\n</html>\n```\n\n### [Nested States & Views](http://plnkr.co/edit/u18KQc?p=preview)\n\nThe majority of UI-Router's power is in its ability to nest states & views.\n\n**(1)** First, follow the [setup](#get-started) instructions detailed above.\n\n**(2)** Then, add a [`ui-view` directive](https://github.com/angular-ui/ui-router/wiki/Quick-Reference#ui-view) to the `<body />` of your app.\n\n>\n```html\n<!-- index.html -->\n<body>\n    <div ui-view></div>\n    <!-- We'll also add some navigation: -->\n    <a ui-sref=\"state1\">State 1</a>\n    <a ui-sref=\"state2\">State 2</a>\n</body>\n```\n\n**(3)** You'll notice we also added some links with [`ui-sref` directives](https://github.com/angular-ui/ui-router/wiki/Quick-Reference#ui-sref). In addition to managing state transitions, this directive auto-generates the `href` attribute of the `<a />` element it's attached to, if the corresponding state has a URL. Next we'll add some templates. These will plug into the `ui-view` within `index.html`. Notice that they have their own `ui-view` as well! That is the key to nesting states and views.\n\n>\n```html\n<!-- partials/state1.html -->\n<h1>State 1</h1>\n<hr/>\n<a ui-sref=\"state1.list\">Show List</a>\n<div ui-view></div>\n```\n```html\n<!-- partials/state2.html -->\n<h1>State 2</h1>\n<hr/>\n<a ui-sref=\"state2.list\">Show List</a>\n<div ui-view></div>\n```\n\n**(4)** Next, we'll add some child templates. *These* will get plugged into the `ui-view` of their parent state templates.\n\n>\n```html\n<!-- partials/state1.list.html -->\n<h3>List of State 1 Items</h3>\n<ul>\n  <li ng-repeat=\"item in items\">{{ item }}</li>\n</ul>\n```\n\n>\n```html\n<!-- partials/state2.list.html -->\n<h3>List of State 2 Things</h3>\n<ul>\n  <li ng-repeat=\"thing in things\">{{ thing }}</li>\n</ul>\n```\n\n**(5)** Finally, we'll wire it all up with `$stateProvider`. Set up your states in the module config, as in the following:\n\n\n>\n```javascript\nmyApp.config(function($stateProvider, $urlRouterProvider) {\n  //\n  // For any unmatched url, redirect to /state1\n  $urlRouterProvider.otherwise(\"/state1\");\n  //\n  // Now set up the states\n  $stateProvider\n    .state('state1', {\n      url: \"/state1\",\n      templateUrl: \"partials/state1.html\"\n    })\n    .state('state1.list', {\n      url: \"/list\",\n      templateUrl: \"partials/state1.list.html\",\n      controller: function($scope) {\n        $scope.items = [\"A\", \"List\", \"Of\", \"Items\"];\n      }\n    })\n    .state('state2', {\n      url: \"/state2\",\n      templateUrl: \"partials/state2.html\"\n    })\n    .state('state2.list', {\n      url: \"/list\",\n      templateUrl: \"partials/state2.list.html\",\n      controller: function($scope) {\n        $scope.things = [\"A\", \"Set\", \"Of\", \"Things\"];\n      }\n    });\n});\n```\n\n**(6)** See this quick start example in action.\n>**[Go to Quick Start Plunker for Nested States & Views](http://plnkr.co/edit/u18KQc?p=preview)**\n\n**(7)** This only scratches the surface\n>**[Dive Deeper!](https://github.com/angular-ui/ui-router/wiki)**\n\n\n### [Multiple & Named Views](http://plnkr.co/edit/SDOcGS?p=preview)\n\nAnother great feature is the ability to have multiple `ui-view`s view per template.\n\n**Pro Tip:** *While multiple parallel views are a powerful feature, you'll often be able to manage your\ninterfaces more effectively by nesting your views, and pairing those views with nested states.*\n\n**(1)** Follow the [setup](#get-started) instructions detailed above.\n\n**(2)** Add one or more `ui-view` to your app, give them names.\n>\n```html\n<!-- index.html -->\n<body>\n    <div ui-view=\"viewA\"></div>\n    <div ui-view=\"viewB\"></div>\n    <!-- Also a way to navigate -->\n    <a ui-sref=\"route1\">Route 1</a>\n    <a ui-sref=\"route2\">Route 2</a>\n</body>\n```\n\n**(3)** Set up your states in the module config:\n>\n```javascript\nmyApp.config(function($stateProvider) {\n  $stateProvider\n    .state('index', {\n      url: \"\",\n      views: {\n        \"viewA\": { template: \"index.viewA\" },\n        \"viewB\": { template: \"index.viewB\" }\n      }\n    })\n    .state('route1', {\n      url: \"/route1\",\n      views: {\n        \"viewA\": { template: \"route1.viewA\" },\n        \"viewB\": { template: \"route1.viewB\" }\n      }\n    })\n    .state('route2', {\n      url: \"/route2\",\n      views: {\n        \"viewA\": { template: \"route2.viewA\" },\n        \"viewB\": { template: \"route2.viewB\" }\n      }\n    })\n});\n```\n\n**(4)** See this quick start example in action.\n>**[Go to Quick Start Plunker for Multiple & Named Views](http://plnkr.co/edit/SDOcGS?p=preview)**\n\n\n## Resources\n\n* [In-Depth Guide](https://github.com/angular-ui/ui-router/wiki)\n* [API Reference](http://angular-ui.github.io/ui-router/site)\n* [Sample App](http://angular-ui.github.com/ui-router/sample/) ([Source](https://github.com/angular-ui/ui-router/tree/gh-pages/sample))\n* [FAQ](https://github.com/angular-ui/ui-router/wiki/Frequently-Asked-Questions)\n* [Slides comparing ngRoute to ui-router](http://slid.es/timkindberg/ui-router#/)\n* [UI-Router Extras / Addons](http://christopherthielen.github.io/ui-router-extras/#/home) (@christopherthielen)\n \n### Videos\n\n* [Introduction Video](https://egghead.io/lessons/angularjs-introduction-ui-router) (egghead.io)\n* [Tim Kindberg on Angular UI-Router](https://www.youtube.com/watch?v=lBqiZSemrqg)\n* [Activating States](https://egghead.io/lessons/angularjs-ui-router-activating-states) (egghead.io)\n* [Learn Angular.js using UI-Router](http://youtu.be/QETUuZ27N0w) (LearnCode.academy)\n\n\n\n## Reporting issues and Contributing\n\nPlease read our [Contributor guidelines](CONTRIBUTING.md) before reporting an issue or creating a pull request.\n",
  "readmeFilename": "README.md",
  "_id": "angular-ui-router@1.0.0-alpha0",
  "dist": {
    "shasum": "80ba240056104cead46f3fd7d532b2656b2447ba"
  },
  "_from": "angular-ui-router@",
  "_resolved": "https://registry.npmjs.org/angular-ui-router/-/angular-ui-router-1.0.0-alpha0.tgz"
}
